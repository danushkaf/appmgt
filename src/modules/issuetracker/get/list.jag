<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

    include("/jagg/constants.jag");
    include("/jagg/config_reader.jag");

	var log = new Log("module/issuetracker/get/list.jag");

    var modManager = jagg.module("manager");
    
    var getAllIssuesOfApplicationByType = function(applicationKey)
    {
        jagg.module("permission").checkUserActionPermission(applicationKey, PERMISSION_APPLICATION_MEMBER);
        var issueTrackerUrl = getProperty(ISSUE_TRACKER_SERVER_URL);
        var tenantDomain = modManager.getTenantDomain();

        var url  = issueTrackerUrl+ "services/tenant/" + tenantDomain + "/report/"+applicationKey+"/type";
        var data = {  };
        var issues = get(url, {} ,"json");
        return issues.data;
    };

    var getIssuesOfApplicationVersion = function(applicationKey, applicationVersion){
        jagg.module("permission").checkUserActionPermission(applicationKey, PERMISSION_APPLICATION_MEMBER);
        var issueTrackerUrl = getProperty(ISSUE_TRACKER_SERVER_URL);
        var tenantDomain = modManager.getTenantDomain();

        var url  = issueTrackerUrl+ "services/tenant/" + tenantDomain + "/project/" + applicationKey + "/issue/" + applicationVersion;
        var data = {  };
        var issues = get(url, {} ,"json");
        return issues.data;
    }
    
    var getIssuesSummary = function(applicationKey)
    {

        jagg.module("permission").checkUserActionPermission(applicationKey, PERMISSION_APPLICATION_MEMBER);

        var result;
        var issues = {};

        result = getAllIssuesOfApplicationByType(applicationKey);
        var resultElems = result.reportResponse;

        for (var i = 0; i < resultElems.length; i++){
            var issue = {};
            issue.appKey = applicationKey;

            var resultElem = resultElems[i];
            issue.version = resultElem.projectVersion;

            var typeList = resultElem.reportList;
            if(typeList instanceof Array){
                for (var j = 0; j < typeList.length; j++){
                    var typeElem = typeList[j];
                    issue[typeElem.type] = Number(typeElem.issueCount);
                }
            }else{
                issue[typeList.type] = Number(typeList.issueCount);
            }

            issues[resultElem.projectVersion] = issue;
        }
        return issues;

    };
    
var getOpenIssues = function(applicationKey, applicationVersion){
        jagg.module("permission").checkUserActionPermission(applicationKey, PERMISSION_APPLICATION_MEMBER);
        var result;
        var issues = new Array();

        try {
            result = getIssuesOfApplicationVersion(applicationKey,applicationVersion);
            var resultElems = result.issueResponse;
        var arrayIndex=0;
            for (var i = 0; i < resultElems.length; i++){
                var issue =  resultElems[i].issue;

                if(issue.status == "OPEN"){
                    var openIssue = {};
                    openIssue.title = issue.summary;
                    openIssue.type = issue.type;
                    openIssue.id = issue.key;
                    openIssue.status = issue.status;
                    openIssue.url = getProperty(ISSUETRACKER_URL) + 'issue/get?issuePkey=' + issue.key;
                    issues[arrayIndex] = openIssue;
                    arrayIndex++;
                }

            }
        } catch (e) {
            log.error("Error while getting issues of " + applicationKey + "\n" + e.message);
            throw "Error while getting issues of " + applicationKey + "\n";
        }
        return issues;

};
%>
