<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");

var log = new Log('modules/registry/tenant/registry.jag');

var modManager = jagg.module("manager");
var tenantDomain=modManager.getTenantDomain();

var carbon = require('carbon');
var multitenancy = carbon.multitenancy;
var context=multitenancy.getPrivilegedCarbonContext();
var tenantManager= multitenancy.getTenantManager();
var tenantId = tenantManager.getTenantId(tenantDomain);
var serverUrl = getProperty(APPFACTORY_SERVER_URL);
var options = {system: true , domain: tenantDomain , tenantId: tenantId};
var registry = new carbon.registry.Registry(serverUrl, options);

var createResourceInTenantSpace = function (path, content, type) {
	jagg.module("permission").checkUserAuthenticated();
	try {
		var resource = {mediaType: type, content: content};
		var result = registry.put(path, resource );
	} catch (e) {
        log.error("Error while storing tenant space registry resource \n" + e.message);
        throw "Error while storing tenant space registry resource";
    }
};

var getResourceFromTenantSpace = function (path) {
	jagg.module("permission").checkUserAuthenticated();
	try {
		return registry.get(path);
	} catch (e) {
        log.error("Error while retriving tenant space registry resource \n" + e.message);
        throw "Error while retriving tenant space registry resource";
    }
};

//checks whether any resource exists in the given path
var resourceExistsInTenantSpace = function (path) {
    jagg.module("permission").checkUserAuthenticated();
    try {
        if (registry.exists(path)) {
            return true;
        } else {
            return false;
        }
    } catch (e) {
        log.error("Error while accessing tenant space registry resource \n" + e.message);
        return false;
    }
};

var deleteResourceInTenantSpace = function (path) {
        jagg.module("permission").checkUserAuthenticated();
        try {
                var result = registry.remove(path);
        } catch (e) {
        log.error("Error while delete tenant space registry resource \n" + e.message);
        throw "Error while storing tenant space registry resource";
    }
};

%>
