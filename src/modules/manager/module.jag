<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

jagg.module("manager", {
	setAuthHeaders:function () {
		return jagg.require(jagg.getModulesDir() + "manager/manager.jag").setAuthHeaders.apply(this, arguments);
	},
	getBackendCookie:function () {
		return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getBackendCookie.apply(this, arguments);
	},
	getTenantDomain:function () {
		return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getTenantDomain.apply(this, arguments);
	},
	getTenantAwareUsername:function () {
		return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getTenantAwareUsername.apply(this, arguments);
	},
	getDomainlessUserName:function () {
		return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getDomainlessUserName.apply(this, arguments);
	},
	getTenantId:function () {
		return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getTenantId.apply(this, arguments);
	},
	getLastCommitId:function () {
        	return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getLastCommitId.apply(this, arguments);
    },
    getOTtenantProperty:function () {
        	return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getOTtenantProperty.apply(this, arguments);
    },
    checkPermissionforStages:function () {
        	return jagg.require(jagg.getModulesDir() + "manager/manager.jag").checkPermissionforStages.apply(this, arguments);
    },
    getApplicationType:function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getApplicationType.apply(this, arguments);
    },
    cacheTenantInfo:function () {
        return jagg.require(jagg.getModulesDir() + "manager/manager.jag").cacheTenantInfo.apply(this, arguments);
    },
    getApplicationTypeManager:function () {
        	return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getApplicationTypeManager.apply(this, arguments);
    },
    getApplicationTypeBean:function () {
        	return jagg.require(jagg.getModulesDir() + "manager/manager.jag").getApplicationTypeBean.apply(this, arguments);
    }
});
%>