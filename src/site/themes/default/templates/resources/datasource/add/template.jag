<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

jagg.template("resources/datasource/add", function(inputs, outputs, jagg) { %>
<%
var applicationName = request.getParameter("applicationName");
var applicationKey = request.getParameter("applicationKey");

var allowedStages = outputs.allowedStages;
AllowedAllStages=outputs.hasAccessForAllstages;
isEdit = request.getParameter("isEdit");

//  jagg.module("permission").checkUserActionPermission(applicationKey,PERMISSION_CONFIGURATION_DB_ADMINISTRATION);
%>

<script type="text/javascript">
    var ck_password = /^[A-Za-z0-9!@#$%^*_~]{6,15}$/;
    var allowedStages = <%=allowedStages%>;
    var AllowedAllStages = <%=AllowedAllStages%>;
    //[cdata[
    function dbCustomUrlSelected() {
        $("#datasource_url_text").show().val("");
        $("#datasource_username_text").show().val("");
        $("#datasource_username_div").hide();
        fillUrlTemplate($("#database_driver").val(), "#datasource_url_text_value");
    }
    function changeDatabaseUsers(){
        var selectedOption = $("#datasource_url_select").find(":selected");
        var selectedValue = selectedOption.val();
	    if (selectedValue === 'Custom') {
	        dbCustomUrlSelected();
	    } else {
            var selectedDBName = selectedOption.attr('data-dbname');
            var selectedRSSInstanceName = selectedOption.attr('data-rssname');
            dbUrlSelected(selectedDBName, selectedRSSInstanceName, selectedValue);
	    }
    }
    function bindDatabaseURLListChangeEvent() {
        $("#datasource_url_select").bind("change", function () {
              changeDatabaseUsers();
        });
        changeDatabaseUsers();
    }

    function drawDatabaseURLsList() {
        var rssInstancesElement = document.getElementById("rssInstances");
        var rssInstanceName = rssInstancesElement.options[rssInstancesElement.selectedIndex].text;
        jagg.post("../blocks/resources/database/add/ajax/add.jag", {
            action: "getDatabases",
            applicationKey: "<%= applicationKey %>"
        },
        function (result) {
            if (result !== undefined) {

                var parsedArray = jQuery.parseJSON(result);
                var dom = "";

                var loopCount = parsedArray.length;
                var selectedVal = "";
                for (var i = 0; i < loopCount; i++) {

                    var element = parsedArray[i];
                    if(element.rssInstanceName==rssInstanceName){
                        dom += '<option data-dbname="' + element.dbName + '"data-rssname="' + element
                    .rssInstanceName + '" value="' + element.url + '">' + element.url + '</option>';
                    }

                    if (i === 0) {
                    	dbUrlSelected(element.dbName, element.rssInstanceName, element.url);
                        selectedVal = element.url;
                    }
                }
                dom += '<option value="Custom">Custom Database</option>';

                $("#datasource_url_select").html(dom);
            	$("#datasource_url_select").select2("val", selectedVal);

                if (loopCount !== 0) {
                    bindDatabaseURLListChangeEvent();
                } else {
                	dbCustomUrlSelected();
                }

            } else {
            	var dom = '<option value="Custom">Custom Database</option>';
                var selectedVal = "Custom";
                $("#datasource_url_select").html(dom);
            	$("#datasource_url_select").select2("val", selectedVal);
            	dbCustomUrlSelected();

                jagg.message({
                    content: 'Error loading Databases',
                    type: 'error'
                });
            }
        },

        function (jqXHR, textStatus, errorThrown) {
        	var dom = '<option value="Custom">Custom Database</option>';
        	var selectedVal = "Custom";
        	$("#datasource_url_select").html(dom);
        	$("#datasource_url_select").select2("val", selectedVal);
        	dbCustomUrlSelected();

        	if (jqXHR.status != 0){
                jagg.message({
                    content: 'Error loading Databases',
                    type: 'error'
                });
        	}



        });
    }

    function setPageStatus() {
        if ($('#useSameDataSource').attr('checked') == "checked") {
            $('.dataSource-section').hide();
            $($('.dataSource-section')[0]).show();
        } else {
            $('.dataSource-section').hide();
            $($('.dataSource-section')[0]).show();
        }
    }

    function createDatasource(btn) {
        $(btn).attr('disabled','disabled');
    	var varDsName = $("#datasource_name").val();
    	var varDsDesc = $("#datasource_description").val();

    	var varUrl = $("#datasource_url_text_value").val();
        var varDriverName = $("#database_driver").val();
        var varDbUsername = $("#datasource_username_text").val();
        var varDbPassword = $("#datasource_password").val();

        create(varDsName, varDsDesc, varUrl, varDriverName, varDbUsername, varDbPassword);
        $(btn).removeAttr('disabled');
    }

    function create(varDsName, varDsDesc, varUrl, varDriverName, varDbUsername, varDbPassword){
    	 var rssInstancesElement = document.getElementById("rssInstances");
         var rssInstanceName = rssInstancesElement.options[rssInstancesElement.selectedIndex].text;
         var isAllStages = false;
         if(allowedStages.indexOf(rssInstanceName) !=-1)  {
             jagg.syncPost("../blocks/resources/datasource/add/ajax/add.jag", {
                 action: "createDatasource",
                 applicationKey: $("#applicationKey").val(),
                 datasourceName: varDsName,
                 datasourceDescription: varDsDesc,
                 rssInstanceName: rssInstanceName,
                 url: varUrl,
                 driverName: varDriverName,
                 dbUsername: varDbUsername,
                 dbPassword: varDbPassword,
                 copyAll : isAllStages
             },

             function (response) {
                 if (!response.error || response.error == false) {
                     location.href = 'listDatasources.jag?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>';
                 } else if(response.error == true) {
                     jagg.message({
                         content: response.errorMessage,
                         type: 'error'
                     });
                 }
             },

             function (jqXHR, textStatus, errorThrown) {
                 if (jqXHR.status != 0){
                     jagg.message({
                         content: 'Error occurred while creating datasource',
                         type: 'error'
                     });
                 }
             });
         }

    }

    function dbUrlSelected(databasename, rssinstancename, url) {
        $("#datasource_url_text" ).hide();
        $("#datasource_url_text_value").val(url);

        $("#datasource_username_text").hide();
        $("#datasource_username_div").show();


        jagg.post("../blocks/resources/database/add/ajax/add.jag", {
            action: "getAttachedUsers",
            applicationKey: $("#applicationKey").attr('value'),
            dbname: databasename,
            rssInstance: rssinstancename
        },

        function (result) {
            if (result != undefined) {
                var parsedArray = jQuery.parseJSON(result);
                $("#datasource_username_select").empty();
                $("#datasource_username_text").val("");
                var i = 0;
                for (i = 0; i < parsedArray.length; i++) {
                    var name = parsedArray[i];

                    var row = '<option value="' + name + '">' + name + '</option>';
                    $("#datasource_username_select").append(row);
                     var dbUrl = $("#datasource_url_select").find(":selected").val();
                        if (i == 0 && dbUrl != 'Custom') {
                        userSelected(name);
                    }

                }

                if (parsedArray.length == 0) {
                    $("#no_users_error").show();
                    $("#datasource_username_div").hide();
                } else {
                    $("#no_users_error").hide();
                    $("#datasource_username_select").select2("val", parsedArray[0].name);
                }
            }
        },

        function (jqXHR, textStatus, errorThrown) {
           /* jagg.message({
                content: 'Error loading Users',
                type: 'error'
            }); */
        });

    }

    function userSelected(value) {
        $("#datasource_username_text").val(value);
    }
    function environmentSelected(value) {
        $("#rssInstance").val(value);
        drawDatabaseURLsList();
    }


    function validateForm() {
		jagg.removeMessage();
        var errorMsg = "";
        var validate = true;

        var datasourceName = $("#datasource_name").val().trim();
        if (datasourceName == "" || datasourceName.length == 0) {
        	errorMsg = "Invalid Datasource name - Enter valid Datasource name which is not empty";
        	validate = false;
        }

        var datasourceNamePattern = /^[a-zA-Z0-9_]{1,100}$/;
        if (datasourceName.length > 0 && !datasourceNamePattern.test(datasourceName)) {
            errorMsg += "Invalid Datasource name - Use maximum 100 characters. <br/> &nbsp;&nbsp;&nbsp;&nbsp;Use both letters and numbers, special characters (such as _).";
            validate = false;
        }

        var url = $("#datasource_url_text_value").val().trim();
        if (url == "" || url.length == 0) {
        	errorMsg += "<br />Invalid Database Url - Enter valid Database Url which is not empty";
        	validate = false;
        }

        var username = $("#datasource_username_text").val().trim();
        if (username == "" || username.length == 0) {
        	errorMsg += "<br />Invalid Username - Enter valid Username which is not empty";
        	validate = false;
        }

        var usernamePattern = /^[a-zA-Z0-9_]{1,16}$/;
        if (username.length > 0 && !usernamePattern.test(username)) {
            errorMsg += "<br/>Invalid Username - Use maximum 16 characters. <br/> &nbsp;&nbsp;&nbsp;&nbsp;Use both letters and numbers, special characters (such as _).";
            validate = false;
        }

        var password = $("#datasource_password").val().trim();
        if (password == "" || password.length == 0) {
        	errorMsg += "<br />Invalid Password - Enter valid password which is not empty";
        	validate = false;
        }

        var passwordPattern = /^[A-Za-z0-9!@#$%^*_~]{6,15}$/;
        if (password.length > 0 && !passwordPattern.test(password)) {
            errorMsg += "<br/>Invalid Password - Use 6 to 15 characters. <br/> &nbsp;&nbsp;&nbsp;&nbsp;Use both letters and numbers. Add special characters (such as !, @, #, $, %, ^, *, _).";
            validate = false;
        }

        if (!validate) {
    	    jagg.message({type:'error', id:'validation', content: errorMsg});
    	    return false;
        }

        return true;
    }

    function fillUrlTemplate(driver,id){
    	if((driver.toLowerCase()).indexOf("mysql")!== -1){
    		$(id).val("jdbc:mysql://<server>:<port>/<dbname>");
    	}
    }

    function drawStagesForCreatePermittedEnvironments(){
        jagg.post("../blocks/resources/common/get/ajax/get.jag", {
                action: "getCreatePermittedEnvironments",
                applicationKey: $("#applicationKey").attr('value')
        },
        function (result) {
              var parsedArray = jQuery.parseJSON(result);
          for(var i = 0; i < parsedArray.length; i++) {
              var stage = parsedArray[i];
              var row='<option>'+stage+'</option>';
              $("#rssInstances").append(row);
              $("#rssInstances").select2({
                  formatResult: selectBoxOptionFormat,
                  minimumResultsForSearch: -1,
                  containerCssClass : "error" });
          }
          if(parsedArray.length == 0){
                $('#rssInstances').html('<div class="row-fluid"><div class="span12"><div class="alert alert-info">No rssInstances created yet</div></div></div>');

            }
          drawDatabaseURLsList();
        },
        function (jqXHR, textStatus, errorThrown) {
               $('#rssInstances').html('<div class="row-fluid"><div class="span12"><div class="alert alert-error">Error occurred while reading rssInstances</div></div></div>');
        });
    }

    $(document).ready(function () {
        drawStagesForCreatePermittedEnvironments();

    });
    //]]
</script>


<div class="container">
				<article class="main">
                        <header class="breakDownFix"><div><% jagg.includeBlock("page/messages", null); %>
                         <% jagg.includeBlock("page/eventing", {"applicationKey":null,"pageName":PAGES.RESOURCES}); %>
                         <% jagg.includeBlock("page/notification-wall", {"wall_name":applicationKey+" - App Wall","applicationKey":applicationKey,"pageName":"App Home"}); %></div>
                        	<div class="content">
                                <h1>Runtime Configs</h1>
                             </div>
                        </header>
                        <% jagg.includeBlock("resources/menu", {page:'datasources',applicationName:applicationName,applicationKey:applicationKey}); %>
                        <section class="separator">
                            <div class="page_nav">
                                <div class="content clear">
                                    <ol class="breadcrumb">
                                            <li class="breadcrumb_item"><a href="<%=jagg.getAbsoluteUrl("/site/pages/listDatasources.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>" class="breadcrumb_link">Datasources</a></li>
                                            <li class="breadcrumb_item"><h2>Create New Datasource</h2></li>
                                    </ol>
                                 </div>
                            </div>
                            <div class="content clear well">
                            	<div class="form-container">

                                    <form action="#" method="post" class="hold right_label" onsubmit="return false;">
                                      <fieldset>
                                            <div class="input_row">
                                                <label for="datasource_name"><strong>Datasource Name</strong> <em>*</em></label>
                                                <input type="text" name="datasource_name" id="datasource_name" class="half" />
                                            </div>
                                            <div class="input_row">
                                                <label for="datasource_description"><strong>Description</strong></label>
                                                <textarea name="datasource_description" id="datasource_description" rows="5" class="full"></textarea>
                                            </div>
                                            <div class="input_row">
                                            	<label for="database_driver"><strong>Database Driver</strong> <em>*</em></label>
                                                <select class="select_list half big" id="database_driver" name="database_driver" onchange="fillUrlTemplate(this.value,'#datasource_url_text_value')">
                                                	<option value="com.mysql.jdbc.Driver">mySql</option>
                                                	<!--option value="org.h2.Driver">H2</option-->
                                                </select>
                                            </div>
                                            <div class="input_row">
                                                    <label for="rssInstance" ><strong>Datasource Environment</strong> <em>*</em></label>
                                                    <select id='rssInstances' class="select_list half big" name="rssInstance" onChange="environmentSelected(this.value)"></select>
                                                    <div>
                                                	<input type="text" name="rssInstance" id="rssInstance" class="half"  style="display:none;"/>
                                                </div>
                                                </div>
                                            <div class="input_row">
                                                <label for="datasource_url"><strong>Database URL</strong> <em>*</em></label>
                                                	<div>
	                                                	<select class="select_list full big datasource_url" id="datasource_url_select" name="datasource_url_select">
	                                                    </select>

	                                                </div>
                                             </div>
                                             <div class="input_row" id="datasource_url_text" style="display:none;">
                                             <label for="datasource_password"><strong>&nbsp;&nbsp;&nbsp;</strong></label>
                                             <input type="text" class="full" id="datasource_url_text_value" name="datasource_url_text_value"/>
                                             </div>
                                            <div class="input_row">
                                            	<label for="datasource_username"><strong>Username</strong> <em>*</em></label>
                                                	<div id="datasource_username_div">
                                                    	<select class="select_list half big" id="datasource_username_select" onchange="userSelected(this.value)"></select>
                                                    </div>
                                                    <div>
                                                        <label id="no_users_error" generated="true" class="error" style="display:none;">There are no attached users for the selected Database. Please attach users to the Database.</label>
                                                    </div>

                                                <div>
                                                	<input type="text" name="datasource_username_text" id="datasource_username_text" class="half"  style="display:none;"/>
                                                </div>
                                            </div>
                                            <div class="input_row">
                                                <label for="datasource_password"><strong>Password</strong> <em>*</em></label>
                                                <input type="password" name="datasource_password" id="datasource_password" class="half" maxlength="15"/>
                                            </div>


                                            <div class="controlset">
                                                <input type="hidden" id='applicationKey' value='<%=request.getParameter("applicationKey")%>' />
                                                <input type="hidden" name="stages" id='stages' value='<%=outputs.deploymentStages%>' />
                                            </div>
                                        </fieldset>

                                         <div class="buttonrow">
                                         	 <input type='submit' name='Submit' value='Create Datasource' onclick="if(validateForm()){createDatasource(this);}" class='btn main'/>
                                         	 <a href="listDatasources.jag?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>">Cancel</a>
                                        </div>


                                     </form>

								</div>
                            </div>
                        </section>
                        <div class="clearfix"></div>
                 </article>
            </div><!-- /container -->


<% }); %>
