<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

jagg.template("application/user/list", function(inputs, outputs, jagg) { %>

<%
    var applicationName = request.getParameter("applicationName");
    var applicationKey = request.getParameter("applicationKey");
    // jagg.module("permission").checkUserActionPermission(applicationKey,PERMISSION_CONFIGURATION_API_MANAGER);
    var hasInviteUserPermission = outputs.hasInviteUserPermission;
    var helpTips = outputs.helpTips;
    %>

    <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/userActivity.js'))%>"></script>

    <script type="text/javascript">

    var usersWithRoles = [];
    var selectedCount=0;
    var appOWner='';
    var selectedUsers = [];
    var permittedToInvite = <%=hasInviteUserPermission%>;
    var appInfo= <%=session.get("APP_INFO")%>;
    var appOWner=appInfo.owner.split('@')[0];
/*this method fill up the table that depicts the roles and the relevant users */
    function disable(btnId){
        var classes=$('#'+btnId).attr('class');
        if(classes){
            if(classes.indexOf('disable')===-1){
                $('#'+btnId).addClass("disable");
            }
        }
    }
    function enable(btnId){
        var classes=$('#'+btnId).attr('class');
        if(classes.indexOf('disable')!==-1){
            $('#'+btnId).removeClass("disable");
        }
    }
    function enableDisableEditDeleteButtons(enablePara){
        if(enablePara){
            //enable delete and edit
            enable('removeUsers');

        }else{
            //disable edit and delete buttons
            disable('removeUsers');

        }

    }
function selectCheckBox(id){
	var isChecked = $('#ck_'+id).is(':checked');
	if(isChecked){
		$('#ck_'+id).removeAttr('checked');
	} else {
		 
		$("#ck_"+id).attr('checked',true);
	}
	enableButton($('#ck_'+id).is(':checked'));
}

function enableButton(ischecked){
	if(ischecked){
	    selectedCount++;
	    enableDisableEditDeleteButtons(true);
	}else{
	    selectedCount--;
	    if(selectedCount===0){
		enableDisableEditDeleteButtons(false);
	    }
	}
}
 
    function updateTable() {
        $('.cleanable').remove();
        var $userListContainer = $('#userDetailsSection');

        jagg.post("../blocks/application/users/get/ajax/list.jag", {
            action: "getUsersOfApplication",
            applicationKey:$("#applicationKey").attr('value')
    }, function (result) {


        var recordCount = 0;
        if (result !== undefined) {
            usersWithRoles = jQuery.parseJSON(result);
            recordCount = usersWithRoles.length;

        }


        if (recordCount > 0) {
            var countString='';
            if(recordCount===1){

                $('#membersCount').replaceWith('<h2 id="membersCount" class="big push_bottom_40">1 Member in <%= applicationName%></h2>');
            } else{
                $('#membersCount').replaceWith('<h2 id="membersCount" class="big push_bottom_40">'+recordCount+' Members in <%= applicationName%></h2>');

            }
            
            var chkDisableStr = "";
            if(!permittedToInvite){
            	chkDisableStr = "style = 'display:none'";
            }
            $userListContainer.html();
            for (var i in usersWithRoles) {

                var userRoles = usersWithRoles[i];
                var $userListContainerRow = $('<li class="list_row_item cleanable" data-email="'+userRoles.userName+'" data-name="'+userRoles.userDisplayName+'">'+
                            '<ul class="list_row" id="'+userRoles.userName+'">'+
                                '<li class="list_col first_list_col item_select">'+
                                    '<div class="list_col_content">'+
                                        '<input id="ck_'+i+'" type="checkbox" name="action_check" class="action_check" data-roles="'+userRoles.roles+'" data-user="'+userRoles.userName+'"' + chkDisableStr + ' />'+
                                    '</div>'+
                                '</li>'+
                                '<li onclick="selectCheckBox('+i+')" class="list_col team_member">'+
                                    '<div class="list_col_content">'+
                                        '<div class="image_list">'+
                                            '<dl>'+
                                                '<dt>'+userRoles.displayName+'</dt>'+
                                                '<dd class="img"><span class="icon-user"></span></dd>'+
                                                '<dd>'+userRoles.userName+'</dd>'+
                                           '</dl>'+
                                        '</div>'+
                                   '</div>'+
                                '</li>'+
                                '<li onclick="selectCheckBox('+i+')" class="list_col  team_role">'+
                                    '<div class="list_col_content">'+userRoles.displayRoles.toString()+'</div>'+
                               '</li>'+
                                '<li onclick="selectCheckBox('+i+')" class="list_col team_last_login">'+
                                    '<div class="list_col_content">'+
                                        // Todo - post 1.0 '2013.05.24 6:19 p.m.'+
                                    '</div>'+
                                '</li>'+
                                '<li onclick="selectCheckBox('+i+')" class="list_col team_controller">'+
                                 //   '<div class="list_col_heading">&nbsp;</div>'+
                                 //    '<div class="list_col_content">&nbsp;</div>'+
                                '</li>'+
                            '</ul>'+
                       '</li>');
                 $userListContainer.append($userListContainerRow);
              //   enableDisableEditDeleteButtons(false);
                 selectedCount=0;
            }
            $('#userListContainer .action_check').click(function(){
                    manageUserList();
                }
            );
            $('.action_check').click(function(){
		        enableButton(this.checked);
            });
        } else {
               $('#userListContainer').html('<li class="noData-message">no data</li>');
            //messageElement.html("No users/roles found!").fadeIn();

        }

    }, function (jqXHR, textStatus, errorThrown) {

        //messageElement.html("Error occured while loading User/Roles information!").fadeIn();

    });
}

var getRoleByName = function(roleName){
    var roleObj;

    for(var i=0;i < allRoles.length;i++){
        if(allRoles[i].role_name == roleName){
            roleObj = allRoles[i];
        }
    }
    return roleObj;

};
var manageUserList = function(){
    selectedUsers = [];
    //Push users to specific roles
    var numberOfUsersChecked = 0;
    $('#userListContainer .action_check').each(function(){
        if($(this).is(':checked')){
            numberOfUsersChecked++;
            var userName = $(this).attr('data-user').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
            selectedUsers.push(userName);

        }

    });
    //Now use the allRows array to show the role checkboxes..

};

    var  finalUsers=[];//globally declared
$(document).ready(function(){

	initializeUserActivity("appUserList", '<%=applicationKey%>', '<%=applicationName%>');

    
    setHelpTips(<%= helpTips %>);
    updateTable();
    $('#jsroleAssignPopup').each(function() {
	$(this).qtip({
		content: {
			text: $(this).next()
		},
		style: {
				classes: 'popover_box short_box',
				widget: false,
				def: false,
				tip: false
			},
		hide: {
			fixed: true,
			event: null,
			effect: function(offset) {
				$(this).slideUp(200);
			}
		},
		show:
		{
			event: 'click',
			effect: function(offset) {
                if(selectedCount!==0){

				$(this).slideDown(200);
                }
			}
		},
		events: {
					show: function(event, api) {
						 api.elements.target.addClass('active');
                        var $el = $(api.elements.target[0]);
                        $el.qtip('option', 'position.my', ($el.data('popover-my-position') == undefined) ? 'top right' : $el.data('popover-my-position'));
                        $el.qtip('option', 'position.at', ($el.data('popover-target-position') == undefined) ? 'bottom right' : $el.data('popover-target-position'));

                        manageUserList();


					},
					hide: function(event, api) {
						 api.elements.target.removeClass('active');
					}
				}
	});
}).bind('click', function(event){ event.preventDefault(); return false; });

$('.text-box-overrider').click(function(){
    var $span = $('span',this);
    var role = $(this).attr('data-role');

    var checkedUsers = [];
    if(allRoles.length > 0 ){
        $('#userListContainer .action_check').each(function(){
                if($(this).is(':checked')){
                    checkedUsers.push($(this).attr('data-user'));
                }
            }
        );
        if($span.hasClass('checkbox-checked')){
            $('span',this).replaceWith('<span class="checkbox-unchecked"></span>');
            getRoleByName(role).users = [];
        }else if($span.hasClass('checkbox-unchecked')  ){
            if(getRoleByName(role).halfUsers != null && getRoleByName(role).halfUsers != undefined){
                $('span',this).replaceWith('<span class="checkbox-half"></span>');
                getRoleByName(role).users = getRoleByName(role).halfUsers;
            }else{
                $('span',this).replaceWith('<span class="checkbox-checked"></span>');
                getRoleByName(role).users = checkedUsers;
            }
        }else if($span.hasClass('checkbox-half')){
            $('span',this).replaceWith('<span class="checkbox-checked"></span>');
            getRoleByName(role).halfUsers = getRoleByName(role).users;
        }

    } else{
        if($span.hasClass('checkbox-checked')){
            $('span',this).replaceWith('<span class="checkbox-unchecked"></span>');
        }else if($span.hasClass('checkbox-unchecked')){
            $('span',this).replaceWith('<span class="checkbox-half"></span>');
        }else if($span.hasClass('checkbox-half')){
            $('span',this).replaceWith('<span class="checkbox-checked"></span>');
        }
    }
});

$('#select_all_check').click(function(){

    $('#userListContainer .action_check').each(function(){
            if($('#select_all_check').is(':checked')){
                $(this).attr('checked','checked');

                selectedCount++;
                enableDisableEditDeleteButtons(true);
            }else{
                $(this).removeAttr('checked');
                selectedCount=0;
                enableDisableEditDeleteButtons(false);
            }
        }
    );

    manageUserList();
}).removeAttr('checked');
enableDisableEditDeleteButtons(false);//disabling edit and delete button on load

$('#saveUserRoles').click(function(){
    // iterate through allRoles and save the users with there roles
    finalUsers=[];
    covertAllRoles();
    detectAllUserRoleChanges();
    updateUsers();
    $(this).parents('.qtip').qtip("hide");
});

$('#removeUsers').click(function(){
    var checkedUsers = [] ;
	jagg.removeMessage('teampageId');
    $('#userListContainer .action_check').each(function(){
                if($(this).is(':checked')){
                    checkedUsers.push($(this).attr('data-user'));

                }
            }
    );
    var result=validateUsersTobeDelete();
    if(result<0){
        if(selectedCount!==0){
            jagg.popMessage({type:'confirm',title:'Delete Users',content:'Are you sure you want to delete users?',okCallback:function(){ deleteUsers();},cancelCallback:function(){}});
            updateTable();
        }
    } else{
        if(result==1){//error code when appcreator included inthe to delete list
            jagg.message({
                content: "Application Creator cannot be deleted - Remove the "+appOWner+" from the list.",
                type: 'warning', id:'teampageId'
            });
        }else{//logged in user includes in the to delete list
            jagg.message({
                content: "User cannot delete him self from the application",
                type: 'warning', id:'teampageId'
            });
        }

    }




});

    function covertAllRoles(){
        //convert all roles array in to processable array in update user method
        for (var index in allRoles){

            var tempRole=allRoles[index];
            var tmpRoleName=tempRole.role_name;
            var tmpUsers=tempRole.users; //array
            for(var userIndex in tmpUsers){
                var userFromFinalUsers=getUserfromFinalUsers(tmpUsers[userIndex]);
                if(userFromFinalUsers===null){
                    var user={};
                    var roles=[];
                    user.name=tmpUsers[userIndex];
                    roles.push(tmpRoleName);
                    user.roles=roles;
                    finalUsers.push(user);
                }else{
                    userFromFinalUsers.roles.push(tmpRoleName);
                }
            }
        }

    }
    function detectAllUserRoleChanges(){
        for(u in finalUsers){
            doDetectChangesNew(finalUsers[u].name);
        }
    }
    function getUserfromFinalUsers(name){
        for(var index in finalUsers){
            if(finalUsers[index].name===name){
                return finalUsers[index];
                break;
            }
        }
        return null;
    }
    function getUserFromUsersWithRoles(name){
        for(var index in usersWithRoles){
            if(usersWithRoles[index].userName===name){
                return usersWithRoles[index];
                break;
            }
        }
        return null;

    }

    function doDetectChangesNew(userName){
        var tmpUser= getUserfromFinalUsers(userName);
        var endingRoles =tmpUser.roles;
        var t=getUserFromUsersWithRoles(userName);
        var startingRoles=t.roles.split('\n');
        var trolesToAdd=[];
        var trolesToDelete=[];

        for(var i in startingRoles){
            if(endingRoles.indexOf(startingRoles[i])===-1){
                //add to roles to delete
                trolesToDelete.push(startingRoles[i]);

            }
        }
        for(var j in endingRoles){
            if(startingRoles.indexOf(endingRoles[j])===-1){
                //ad to rolestoadd
                trolesToAdd.push(endingRoles[j]);
            }
        }
        tmpUser.rolesToDelete=trolesToDelete;
        tmpUser.rolesToAdd=trolesToAdd;

    }
    function updateUsers(){

        for(var u in finalUsers){
            var user=finalUsers[u];
            doupdateUser(user.name,user.rolesToDelete,user.rolesToAdd,u);
        }

    }



    function doupdateUser(username,rolesToDel,rolestoAd,count){
        jagg.post("../blocks/tenant/users/add/ajax/add.jag", {
                    action:"updateUserRoles",
                    userName:username,
                    rolesToDelete:rolesToDel.toString(),
                    rolesToAdd:rolestoAd.toString()
                },

                function (result) {

                    if(result != undefined || result==true){

                        // TODO implement addApplicationToApp(applicationKey,
                        // applicationName, applicationDescription);
                        var x= (finalUsers.length-1)
                        if(count==x){
                            window.setTimeout(function () {
                                updateTable();

                            }, 300);

                        }
                        enableDisableEditDeleteButtons(false);

                        return result;
                    }else if(result==false){

                        return result;
                    }
                },
                function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');
                    updateTable();
                });

    }

    $('#search_members').keyup(function(event){
        doSearch($(this).val());
    });
    function doSearch(searchtext){

        $(".cleanable").each(function(){

            var dv=$(this).attr("data-email");
            var ds=$(this).attr("data-name");
            //if(searchtext.indexOf("*")!=-1){
                var pattern=new RegExp(searchtext);
                if((pattern.test(dv))||(pattern.test(ds))){
                    $(this).show();

                }else{
                    $(this).hide();
                }


//            }else{
//                if((dv.indexOf(searchtext)==0)||(ds.indexOf(searchtext)==0)){
//                    $(this).show();
//
//                }else{
//                    $(this).hide();
//                }
//            }

        });
    }

    /*delete a given user*/
    function deleteUsers(){

        jagg.post("../blocks/application/users/update/ajax/update.jag", {
                    action:"removeUserFromApplication",
                    applicationKey:$("#applicationKey").attr('value'),
                    users:selectedUsers.toString()

                },

                function (result) {
                        window.setTimeout(function () {
                            updateTable();

                        }, 300);
                },
                function (jqXHR, textStatus, errorThrown) {
                    updateTable();
                    //jagg.message({content:'Error Occured during the removal process of '+userToDelete:'error' });
                });


    }
    function validateUsersTobeDelete(){
        var i=selectedUsers.indexOf(appOWner);
        var loggedInUser=$('#userName').attr('value').split('@')[0];
        var j=selectedUsers.indexOf(loggedInUser);
        if(i>=0){
            //appcreator in the list to be deleted
            return 1;
        }if(j>=0){
            //logged in user in the list to be deleted
            return 2;
        }else{
            //validation pass
            return -1;
        }
    }

});

    function setHelpTips(helpTips){
	$("#listMemberHelp").html(helpTips.listMemberHelp);	
    }

</script>




<div class="container">
    <article class="main">
        <% jagg.includeBlock("page/messages", null); %>
        <% jagg.includeBlock("page/eventing", {"applicationKey":null,"pageName":PAGES.TEAM}); %>
        <% jagg.includeBlock("page/notification-wall", {"wall_name":applicationKey+" - App Wall","applicationKey":applicationKey,"pageName":"App Home"}); %>
        <header class="separator">
            <div class="content">
                <div class="left">
                    <h1 class="inline_box">Application Team</h1>

                </div>

             </div>
        </header>
<% jagg.includeBlock("page/help", {"section": "team"}); %>
            <div class="content">
                <div class="af_container">
                    <div class="af_row">
                        <div class="col-10">
                            <form class="left fw_250 form-container search_form" onSubmit="return false;">
                            <div class="input_row">
                                <label for="search_members" class="hide" >Search Members</label>
                                <input id="search_members" type="text" class="fw_250" placeholder="Search Members" name="search_members" value=""  /><span class="icon-search"></span>
                            </div>
                            </form>
                        </div>
                        <div class="col-2">
                            <% if (hasInviteUserPermission) { %>
                                <a id="btnAddMembers" href="<%=jagg.getAbsoluteUrl("/site/pages/application-user-invite.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>" class="btn main head button-fixed-width-150">Add Members</a>
                            <% }else{ %>
                                <span class="button-fixed-width-150"></span>
                            <% } %>
                        </div>
                    </div>
            </div>
            </div>
            <div class="content">
                <!--<h2 id="membersCount" class="big push_bottom_40"> Members in Team</h2>-->
		<div class="help-block push_bottom_10"><span class="help-icon">?</span> <span id="listMemberHelp"></span></div>
                <ul class="list_table highlight" id="userListContainer">
                    <li class="list_row_item row_section">
                            <ul class="list_row first_list_row ">
                                <li class="list_col first_list_col item_select cursover_remover">

                                    <h2 class="list_col_heading list-col-min">
                                        <% if (hasInviteUserPermission) { %>
                                        <input type="checkbox" name="select_all" id="select_all_check" /></h2>
                                        <%}%>
                                </li>
                                <li class="list_col team_member cursover_remover">
                                    <h2 class="list_col_heading list-col-min" style="padding-left:20px;">Team Member</h2>
                                </li>
                                <li class="list_col  team_role cursover_remover">
                                    <h2 class="list_col_heading list-col-min">Roles</h2>
                                </li>
                                <li class="list_col team_last_login cursover_remover">
                                    <h2 class="list_col_heading list-col-min">
                                        &nbsp;
                                    <!-- Todo - post 1.0 -->
                                    <!--Last Login-->
                                    </h2>
                                </li>
                                <li class="list_col team_controller cursover_remover">
                                    <h2 class="list_col_heading list-col-min" >
                                        <% if (hasInviteUserPermission) { %>
                                            <a id="removeUsers" href="#" class="icon_link" title="Remove User"><span class="icon-remove" title="Remove User"></span></a>
                                        <% } %>
                                    </h2>

                                </li>
                            </ul>
                       </li>
                       <div id="userDetailsSection"></div>
                </ul>
            </div>

    <div class="clearfix"></div>
    </article>
</div><!-- /container -->

<input type="hidden" id="userName" value='<%= jagg.getUser() %>' />
<input type="hidden" id="applicationKey" value='<%= applicationKey %>' />





        <% }); %>
