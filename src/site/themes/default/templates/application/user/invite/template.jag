<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/constants.jag"); %>
<% jagg.template("application/user/invite", function(inputs, outputs, jagg) { %>

<%
    var applicationName = request.getParameter("applicationName");
    var applicationKey = request.getParameter("applicationKey");
    jagg.module("permission").checkUserActionPermission(applicationKey,PERMISSION_CONFIGURATION_API_MANAGER);
    var hasInviteUserPermission = outputs.hasInviteUserPermission;
    var isOTTenant=outputs.isOTTenant;
    var helpTips = outputs.helpTips;
    %>

    <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/userActivity.js'))%>"></script>

    <script type="text/javascript">
    /*this method fill up the table that depicts the roles and the relevant users */
    var addedUsers=[];
    var repoAccessability = "";
    function updateTable() {


        jagg.syncPost("../blocks/application/users/get/ajax/list.jag", {
            action: "getUsersOfApplication",
            applicationKey:$("#applicationKey").attr('value')
        }, function (result) {
            appUsers = result;
        //$('#btn_nvite_users').removeAttr('disabled').val($('#btn_nvite_users').attr('prev-val'));
    });
}

/*send the invitaion a given user for a given roles*/
function sendInvite(users){
    jagg.post("../blocks/application/users/add/ajax/add.jag", {
                action:"inviteUserToApplication",
                applicationKey:$("#applicationKey").attr('value'),
                users:users.toString()
            },

            function (result) {
		$('#btn_nvite_users').prop('disabled',false);
                if(result != undefined || result==true){

                    window.location.replace("<%=jagg.getAbsoluteUrl("/site/pages/application-user.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>");
                    updateTable();
                    return result;
                }else if(result==false){

                  //showNotification('notifier','message','This user has already been invited!','warn');
                    return result;
                }
            },
            function (jqXHR, textStatus, errorThrown) {
                // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');
                updateTable();

                window.location.replace("<%=jagg.getAbsoluteUrl("/site/pages/application-user.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>");
		$('#btn_nvite_users').prop('disabled',false);
            });

}


/*This method is not removed.kept for future use*/
function searchUser(autocomplete){
	<%
    if(getProperty(USER_SEARCH_STATUS) === "false"){
        %>return;<%
    }
    %>
    var userName;
    var searchPara;
    if(autocomplete==true){
        searchPara=searchText+"*";
    }
    else{
        searchPara=searchText;
    }
    userArrayList.length=0;
    $('#userListContainer').html("");
    ClearOptionsFast('autocompleteBox');
    //jagg post to get users contains a given part of text in the name
    jagg.post("../blocks/application/users/get/ajax/list.jag", {
                action:"getAllUsersHavingName",
                userName: searchPara//$("#searchTxt").attr('value')
            },
            function (result) {
                userNames=JSON.parse(result);

            },
            function (jqXHR, textStatus, errorThrown) {
                // jagg.message({content:'User Searching Failed',type:'info' });
            });

}

function clear_checkBoxes(){
    $('.role_checkbox').attr('checked',false);
}
function rolePanelSlideUp(){
    $('#org_user_invitation').slideUp(function(){
        clear_checkBoxes();

        });



}

var appUsers={};
var invitaionArray=[];
$(document).ready(function(){
	initializeUserActivity("userInvite", '<%=applicationKey%>', '<%=applicationName%>');
    
    setHelpTips(<%= helpTips %>);
     $('#addToListBtn').attr('disabled',true);

    $("#allUsersList").keyup(function(){
        if ($(this).val().trim() != "") {
            $("#addToListBtn").removeAttr("disabled");
        } else {
            $("#addToListBtn").attr("disabled", true);
        }
    });
  //  loadAllUsers();
  //  appUsers=sessionStorage.getItem("appUsers");
    var appKey = '<%= applicationKey %>'
	loadApplicationInfo(appKey);
    updateTable();//to refresh the session variuable
    //$('#btn_nvite_users').prop("disabled", true);
   // $('#addToListBtn').prop('disabled',true);
    $('#addToListBtn').click(function(){
	jagg.removeMessage('inviteMembersForAppPage');
        var testUser= $('#allUsersList').val();
        if(<%=isOTTenant%>==true){
            testUser=testUser.replace("@","..");
        }
        //check whether user is in the app
        if(testUser.length>0){
        if(addedUsers.indexOf(testUser)===-1){

           // $('#btn_nvite_users').prop("disabled", false);

        if(!isUserIntheApp(testUser)){
            //user in not in the app
            getUserInfo(testUser);

        }else{
            //user is in the app
            //show error notificaiton

            jagg.message({
                content: "Specified user is already in the application",
                type: 'warning', id:'inviteMembersForAppPage'
            });
        }
        }else{
            jagg.message({
                content: "Specified user is already added to the invitation list",
                type: 'warning', id:'inviteMembersForAppPage'
            });

        }

        }
        $('#close_panel').click(function(){
			rolePanelSlideUp();
            });

        $('#invite_to_org').click(function(){
          var userName=$('#allUsersList').val();
          var email=$('#notification_email').val();
          var roles_to_assign = [];
          $('#roles input:checked').each(function() {
               roles_to_assign.push($(this).attr('data-role'));
          });
         roles_to_assign.push("app_"+"<%= applicationKey%>");
            //call block level of cloud app with user name,email,and set of roles to assign
            //
         if(!validateEmail(email)){
             jagg.message({
                 content: "Email address invalid- Enter a valid emai address",
                 type: 'error', id:'inviteMembersForAppPage'
             });
         }else{
             rolePanelSlideUp();
             var msgString="Invitation has been succesfully posted to "+userName
             				+"for application <%=applicationName%>";
	             				 jagg.message({
	             	                 content: msgString,
	             	                 type: 'success', id:'inviteMembersForAppPage'
	             	             });
              $('#allUsersList').val('');
              $('#addToListBtn').attr('disabled',true);
          }
          });
    });
    function validateEmail(sEmail) {
        var filter = /^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if (filter.test(sEmail)) {
            return true;
        }
        else {
            return false;
        }
    }


     function createUlElementFoUser(User){
        var userName=User.userName;
        var id=userName.split('@')[0];
        invitaionArray.push(userName);

        $('#userListTable').append($('<li class="list_row_item invitable" id="'+id+'" data-user="'+userName +'">'+
                '<ul class="list_row  ">'+
                '<li class="list_col first_list_col team_member">'+
                '<div class="list_col_content" style="cursor:default">'+
                '<div class="image_list">'+
                '<dl> '+
                '<dt>'+User.displayName+'</dt> '+
                '<dd class="img"><span class="icon-user"></span></dd>'+
                '<dd id="user_name">'+userName+'</dd>'+
                '</dl>'+
                '</div> '+
                '</div> '+
                '</li> '+
                '<li class="list_col  team_developer"> '+
                '<div class="list_col_content"> '+
                //'<input type="checkbox" name="role" data-role="developer" class="assign_roles" data-user="'+userName+'" />'+
                '</div>'+
                '</li>'+
                '<li class="list_col team_devops">'+
                '<div class="list_col_content">'+
              //  '<input type="checkbox" name="role" data-role="devops" class="assign_roles" data-user="'+userName+'"/>'+
                '</div>'+
                '</li>'+
                '<li class="list_col team_qa">'+
                '<div class="list_col_content">'+
               // '<input type="checkbox" name="role" data-role="qa" class="assign_roles" data-user="'+userName+'"/>'+
                '</div>'+
                '</li>'+
                '<li class="list_col last_list_col team_remove">'+
                '<div class="list_col_content" style="margin-top:-2px;">'+
                '<a href="#" class="icon-remove-sign remove_user"  data-id="'+id+'" data-user="'+userName+'"></a>'+
                '</div>'+
                '</li>'+
                '</ul>'+
                '</li>'));
        $('#allUsersList').val('');
        $('#addToListBtn').attr('disabled',true);
        rolePanelSlideUp();
        $('.assign_roles').click(function(event){

            event.stopImmediatePropagation();
           var user=$(this).attr('data-user');
            var role=$(this).attr('data-role');
            if(this.checked) {
                addUserToInvitationArray(userName,role);
            }else{
                removeFromInvitaionArray(userName,role);
            }
            if(invitaionArray.length>0){
                //enable invitation button
            //    $('#btn_nvite_users').prop("disabled",false);
            }else{
                //disable invitation but
            //    $('#btn_nvite_users').prop("disabled", true);
            }

        });
        $('.remove_user').click(function(){
            var id=$(this).attr('data-id');

            $("#"+id).remove();
            removeUserFromInvitaionArray($(this).attr('data-user'));
            var index=addedUsers.indexOf($(this).attr('data-user'));
            if(index>=0){
                addedUsers.splice(index,1);
            }
            if($('.invitable').length===0){
               // $('#btn_nvite_users').prop("disabled", true);
            }
		if($('input[type=checkbox]:checked').size()==0){
			//$('#btn_nvite_users').prop("disabled", true);
		}

        });
    }
    function getUserInfo (user){
	jagg.removeMessage('inviteMembersForAppPage');
        jagg.post("../blocks/tenant/users/get/ajax/get.jag", {
                    action:"getUserInfo",
                    userName: user
                },
                function (result) {

                    uresult=JSON.parse(result);
                    console.log(uresult);
//                     if(uresult==null){
//                         $('#org_user_invitation').slideDown();
//                     }

                    if(uresult==null){
                 //    jagg.message({content: uresult.message,
                 //       type: 'error', id:'inviteMembersForAppPage'});
                        jagg.message({
                            content: "Specified user is not registered - Select a user who is registered",
                            type: 'warning', id:'inviteMembersForAppPage'
                        });
                    } else {
                        var uname=uresult.userName;
                        if(uname.length>0){
                            if(uresult!=undefined){
                                var roleNum= uresult.roles.length;
                                if(roleNum>0){
                                    createUlElementFoUser(uresult);
                                    addedUsers.push(uname);
                                }else{
                                    jagg.message({
                                        content: uname+" is not assigned to roles yet. An admin must assign roles to users before you can add them as members of your team.",
                                        type: 'warning', id:'inviteMembersForAppPage'
                                    });

                                }
                            }

                        }else{
                            //user in not in the LDAP
                           jagg.message({
                                content: "Specified user is not registered - Select a user who is registered",
                                type: 'warning', id:'inviteMembersForAppPage'
                            });
                        }
                    }
                },function (jqXHR, textStatus, errorThrown) {
                    // showNotification('notifier','message','Your invitation has not been sent to '+newUserNames,'error');

                	if ( jqXHR.status != 0){
            			jagg.message({
                            content: "Specified user is not registered - Select a user who is registered",
                            type: 'warning', id:'inviteMembersForAppPage'
                        });

                	}
                });
    }

    function isUserIntheApp(userName){
        for(var i in appUsers){
            if(appUsers[i].userName==userName){
                return true;
                break;
            }
        }
        return false;
    }

 function loadApplicationInfo(applicationKey){
    jagg.post("../blocks/application/get/ajax/list.jag", {
	    action:"getAppInfo",
	    applicationKey:applicationKey
	},function (result) {
	    var parsedArray = jQuery.parseJSON(result);
      	    repoAccessability = parsedArray.repoAccessability;
	},function (jqXHR, textStatus, errorThrown) {
	    //jagg.message({content:'Could not load Application information',type:'error' });
        if ( jqXHR.status != 0){
            jagg.message({content:'Could not load Application information',type:'error',id:'myuniqeid' });
        }

	});
}



    $('#btn_nvite_users').click(function(){
	jagg.removeMessage('inviteMembersForAppPage');
        if(invitaionArray.length>0){
        if(validateInvitees()){
	    $('#btn_nvite_users').prop('disabled',true);
		var appKey = '<%= applicationKey %>'
		loadApplicationInfo(appKey);

		/*if(repoAccessability == "perDevRepo"){
               forkRepositoryForDevelopers(invitaionArray);
            }*/
		inviteAllNew();
            jagg.message({
                content: "User list is submitted to invite",
                type: 'success', id:'inviteMembersForAppPage'
            });
            invitaionArray=[];
        }else{
            jagg.message({
                content: "Users without roles can be found in the list - Assign roles and continue with invitation process",
                type: 'warning', id:'inviteMembersForAppPage'
            });
	    $('#btn_nvite_users').prop('disabled',false);

        }
        }else{
            jagg.message({
                content: "Empty list of invitees - Add users to the invitation list ",
                type: 'error', id:'inviteMembersForAppPage'
            });
	    $('#btn_nvite_users').prop('disabled',false);

        }

    });

    $('#btn_cancel').click(function(){
        $('.invitable').each(function(){
            $(this).remove();
        });
    });


  function  addUserToInvitationArray(userName,role){
      //check whether user is in the invitatiion array

      //if so push the role
      var User=isUserAlreadyInInvitationArray(userName)
      if(User!==null){
          //user already in the invitation array
          if(User.roles.indexOf(role)===-1){
              User.roles.push(role);
          }
      }else{
          //user not in the invitaiton array
          var user={};
          user.userName=userName;
          var roles=[];
          roles.push(role);
          user.roles=roles;
          invitaionArray.push(user);
      }
  }
  function removeFromInvitaionArray(usteerName,role){
      var User=isUserAlreadyInInvitationArray(userName);
      if(User!==null){
          var index=User.roles.indexOf(role);
          User.roles.splice(index,1);
      }
  }
    function removeUserFromInvitaionArray(userName){
        var User=isUserAlreadyInInvitationArray(userName);
        if(User!==null){
            var index=invitaionArray.indexOf(User);
            invitaionArray.splice(index, 1);
        }
    }
  function isUserAlreadyInInvitationArray(userName){

      for (var i in invitaionArray){
          if(invitaionArray[i]===userName){
              return invitaionArray[i];
              break;
          }
      }
      return null;
  }
  function inviteAllNew(){
      var l=invitaionArray.length;
      //$('#btn_nvite_users').attr('disabled','disabled').attr('prev-val',$('#btn_nvite_users').val()).val('Inviting..');
      sendInvite(invitaionArray);
      updateTable();//to refresh the cache
  }

});
var loadAllUsers = function(){

     jagg.post("../blocks/application/users/get/ajax/list.jag", {
                action:"getAllUsersHavingName",
                userName: '*'//$("#searchTxt").attr('value')
            },
            function (result) {
                userNames=JSON.parse(result);

                if(userNames.usernames.length>0){
                    for(var i=0;i<userNames.usernames.length;i++){
                        $('#allUsersList').append($('<option data-description="'+userNames.usernames[i]+'" data-image="no" >'+userNames.usernames[i]+'</option>'));
                    }
                }

                $("#allUsersList").select2({
                    formatResult: selectBoxOptionFormat,
                    minimumResultsForSearch: -1,
                    containerCssClass : "error" });
                });


};

function validateInvitees(){
   return invitaionArray.length>0;
}

function doFork(applicationKey, tenantAwareUserNameArray, type, version) {
    jagg.post("../blocks/lifecycle/add/ajax/add.jag", {
                action:"createFork",
                applicationKey:applicationKey,
                userNameArray:tenantAwareUserNameArray.toString(),
                type:type,
                version:version
            }, function (result) {
                forcePageAppRefresh = true;
            },
            function (jqXHR, textStatus, errorThrown) {

                if ( jqXHR.status != 0){
                    jagg.message({
                        content:"Error while forking repository.",
                        type:'error'
                    });
                }


            });
}

function forkRepositoryForDevelopers(invitationArray) {
    var loggedInUser = '<%=jagg.getUser()%>';
    var appKey = '<%= applicationKey %>';
    var tenantDomain = loggedInUser.split("@")[1];
    var tenantAwareUserNameArray = [];
    for (var i = 0; i < invitationArray.length; i++) {
        var tenantAwareUserName = invitationArray[i] + "@" + tenantDomain;
        tenantAwareUserNameArray.push(tenantAwareUserName);
    }
    doFork(appKey, tenantAwareUserNameArray, "git", "");

}

function setHelpTips(helpTips){
    $("#addMemberHelp").html(helpTips.addMemberHelp);
}

</script>

<div class="container">

				<article class="main">

				     <% jagg.includeBlock("page/messages", null); %>
				     <% jagg.includeBlock("page/eventing", {"applicationKey":null,"pageName":PAGES.TEAM}); %>
				     <% jagg.includeBlock("page/notification-wall", {"wall_name":applicationKey+" - App Wall","applicationKey":applicationKey,"pageName":"App Home"}); %>
                    <header class="separator">
                        <div class="content">
                            <ol class="breadcrumb">
                                    <li class="breadcrumb_item"><a class="breadcrumb_link" href="<%=jagg.getAbsoluteUrl("/site/pages/application-user.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>">Team</a></li>
                                    <li class="breadcrumb_item"><h1>Add Members</h1></li>
                            </ol>
                         </div>
                    </header>
<!-- <% jagg.includeBlock("page/help", {"section": "memberAddition"}); %>-->
				<section class="separator">
						<div class="mini_content well">
                            <div class="form-container" name="#">
                            <div class="help-block"><span class="help-icon">?</span> <span id="addMemberHelp"></span></div>
                            <div id="select_user_box">
                                <%
    var header = "User Name";
    if(isOTTenant==true){%>
                            	    header = "Email";
                                <%}%>
                                <div class="input_row">
                                  <!--  <select class="select_list_custom select2-input" id="allUsersList" type="text"></select>     -->
                                    <input type="text" class="select2-input" spellcheck="false" id="allUsersList" autocapitilize="off" autocorrect="off" autocomplete="off" placeholder="<%=header%>">
                                    <button class="btn sub" id="addToListBtn">Add to List</button>
                                </div>
                                <div id="org_user_invitation" style="display:none">
                                <div class="input_row">
                                 <p>User doesn't exist in the organization. Select a role and invite</p>
                                 </div>
                                <div class="input_row">
                                             <label>Email</label><input type="text" id="notification_email" spellcheck="false" id="allUsersList" autocapitilize="off" autocorrect="off" autocomplete="off">

                                                   </div>
                                                  <form class="form-container" id="jsroleAssignPopupForm">
                                                             <div class="input_row" id="roles">
                                                                <label class="text-box-overrider" data-role="developer"><input type="checkbox" class="role_checkbox"  data-role="developer"> Developer</label>

                                                                <label class="text-box-overrider" data-role="devops"><input type="checkbox" class="role_checkbox" data-role="devops" > DevOps</label>

                                                                <label class="text-box-overrider" data-role="qa"><input type="checkbox" class="role_checkbox" data-role="qa" > QA</label>

                                                                 <label class="text-box-overrider" data-role="appowner"><input type="checkbox" class="role_checkbox" data-role="appowner" > Application Owner</label>

                                                                 <label class="text-box-overrider" data-role="cxo"><input type="checkbox" class="role_checkbox" data-role="cxo" > CXO</label>
                                                             </div>
                                                             <div class="input_row">
                                                                <button class="btn main small" type="button" id="invite_to_org">Invite</button><a id="close_panel" href="#" class="popover_close small">Close</a>
                                                             </div>
                                                    </form>
                                 </div>
                            </div>

                            <ul class="list_table" id="userListTable" >

                           	</ul>
                            <div id="action_container" class="push_top_20">
                            	<button type="button" class="btn main" id="btn_nvite_users">Invite</button> <a id="btn_cancel" href="javascript:location.href='/appmgt/site/pages/application-user.jag?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>'">Cancel</a>
                            </div>
                            </div>



  					  <div class="clearfix"></div>
					  </div>
					</section>

				<div class="clearfix"></div>
                </article>
</div><!-- /container -->
<input type="hidden" id="userName" value='<%= jagg.getUser() %>' />
<input type="hidden" id="applicationKey" value='<%= applicationKey %>' />





        <% }); %>
