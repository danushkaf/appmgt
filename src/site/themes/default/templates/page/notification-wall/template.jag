<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

jagg.template("page/notification-wall", function (inputs, outputs, jagg) {
    var applicationKey = inputs.applicationKey;
    var pageName = inputs.pageName;
    var polling_period = outputs.polling_period;
    var wallName = inputs.wall_name;
    if(polling_period==null || polling_period==undefined){
        polling_period = 5000;
    }

    //event completion timeout is set to 30 mins (=1800s)
    var stateCompletionTimeoutDuration = 1800;

    %>
    <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jquery.cookie.js'))%>"></script>
    <script type="text/javascript">



    function pollNotifications(){
    var userName = $("#userName").attr('value');
        jagg.post("../blocks/events/listen/ajax/listen.jag", {
            action: "listen",
            appId:'<%=applicationKey%>',
        pageName:'<%=pageName%>',
        userName: userName
    },
    function (result) {
        $("#notificationDataDiv").empty();
        var obj = jQuery.parseJSON(result);
        var retrievedTime = obj.retrievedTime;
	    obj = obj.list;

	    if(obj) {
	    var correlationKeyArray = [];
            for(var i=obj.length-1;i>-1;i--){
                var event = jQuery.parseJSON(obj[i]);
                var category = event.object.category;

                var notificationIconDiv = "notification-info-icon";
                var notificationIcon = "icon-ok-circle";
                var notificationTitleDiv = "notification-info-title";

                if(category==undefined || category=="ERROR" ){
                    notificationIconDiv = "notification-error-icon";
                    notificationIcon = "icon-remove-circle";
                    notificationTitleDiv = "notification-error-title";
                }

		if(event.properties.state == "COMPLETE"){
                    correlationKeyArray.push(event.properties.correlationKey);
                }

                if(event.properties.state == "START" && correlationKeyArray.indexOf(event.properties.correlationKey) == -1){
                    notificationIcon = "icon-spinner icon-spin";
                    if(eventStateCompletionTimeout(retrievedTime, event.published)){
                        notificationIcon = "icon-remove-circle";
                    }
                }

		if(event.properties.state == "DELETE"){
                        break;
                } 	

                   $("#notificationDataDiv").append(
                    $('<div class="notification-subsection">' +
                        '<div class="'+notificationIconDiv+'">' +
                            '<span class="'+notificationIcon+'"'+'></span>' +
                        '</div>' +
                        '<div class="notification-div">' +
                            '<div class="'+notificationTitleDiv+'">'+
                                event.object.title + getNotificationDetails(event.object.content)+'<br>' +
                                '<span class="icon-time" style="color:#666;"> </span>' +
                                '<span class="notification-time">'+
                                    getTimeDetails(retrievedTime, event.published)+
                                '</span>' +
                            '</div>'+
                        '</div>' +
                        '<div style="clear:both"></div>' +
                    '</div>'    //subsection
                ));

                $('.info-left').qtip({
                    content: {
                        attr: 'data-tooltip' // Tell qTip2 to look inside this attr for its content
                    },
                    position : {
                        my: 'top right'
                    }
                });

            }
        }
        setTimeout(pollNotifications,'<%=polling_period%>');
    },
    function (jqXHR, textStatus, errorThrown) {

    });
}
var resizeWall = function(){
    var  docHeight = $(document).height()-$('.main_header').height()-1;

    //We compute the height of all the inner elements here. If that is less than the doc height, then we set overflow to hidden
    //This is done to avoid the scroll bar in resources pages, if there are low number of notifications.

    var innerChildHeight = $('.notification-container').outerHeight();

    if(docHeight >= innerChildHeight){
        $('.notification-container').css('overflow-y','hidden');
        $('.notification-container').css('min-height',$(window).height()+'px');
    }else{
        $('.notification-container').css('overflow-y','auto');
        $('.notification-container').css('min-height',docHeight+'px');
    }
};
var resizeNotifier = function(){
    var w = $(document).width();
    var slideButtonRight = 0;
    var notification_section_width;
    if(w <= 1300){
        notification_section_width = 250;
        slideButtonRight = 250;
        $('.notification-section').show();
    }else if(w>1300 && w < 1700) {
        notification_section_width = 250;
        slideButtonRight = 250;
        $('.notification-section').show();
    }else{
        notification_section_width = 400;
        slideButtonRight = 400;
        $('.notification-section').show();
    }
    $('.notification-section').width(notification_section_width);
    $('.notification-slider-container').css('right',slideButtonRight+"px");

};

$(document).ready(function () {
    pollNotifications();
    var $notificationWrapper = $('#notificationWrapper');
    $(document).scroll(function(){
	var top = $(document).scrollTop();
	if (top > 0){

		$notificationWrapper.css('margin-top','-61px');
	}else{
		$notificationWrapper.css('margin-top','0');
	}

    });
    $(window).resize(function(){
	    resizeWall();
	    resizeNotifier();
    });
    resizeWall();
    resizeNotifier();
    $('#notification-slider-btn').click(function(){
        var w = $(document).width();

        var slideButtonRight = 0;
        var notification_section_width;
        if( w < 1700) {
            notification_section_width = 250;
            slideButtonRight = 250;
        }else{
            notification_section_width = 400;
            slideButtonRight = 400;
        }
        $('.notification-section').width(notification_section_width);

        if( $('#notificationWrapper').is(":visible")){
            $(this).parent().animate({right:0},500);
            $('#notificationWrapper').hide('slow');
        }else{
            $('#notification-slider-btn').parent().animate({right:slideButtonRight},500);
            $('#notificationWrapper').show('slow');
        }
    });

});

        //to get time details
        function getTimeDetails(retrievedTime, publishedTime){
            //time Difference in seconds
	    var timeDiff = Math.round((retrievedTime - publishedTime)/1000);

             if(timeDiff < 60) {
                return timeDiff + " seconds ago";
             } else if (timeDiff < (60*60)) {
                return Math.round(timeDiff/60) + " minutes ago";
             } else if(timeDiff < (60*60*24)) {
                return Math.round(timeDiff/(60*60)) + " hours ago";
             }  else {
                return Math.round(timeDiff/(60*60*24)) + " days ago";
             }
        }

	 //The continuous spinning icon goes away after the configured time interval
        function eventStateCompletionTimeout(retrievedTime, publishedTime){
                //time Difference in seconds
                var timeDiff = Math.round((retrievedTime - publishedTime)/1000);

                //if the timeDifference is greater than the event completion timeout
                if (timeDiff > '<%=stateCompletionTimeoutDuration%>') {
                    return true;
                }
             }


        function getNotificationDetails(eventcontent){
            var html = "";
            if(eventcontent){
               html = '<span class="info-left" data-tooltip="'+eventcontent+'"><i class="icon-info-sign"></i></span> ';
            }
            return html;
        }


</script>
<input type="hidden" name="userName"  id="userName" value='<%= jagg.getUser() %>'/>
<div class="notification-section" id="notificationWrapper">
    <div id="notificationBar" class="notification-container">
<!--<img src="../../../img-dev/loading-small.gif"/>-->
        <h2 class="notification-header"><%=wallName%></h2>
        <div id="notificationDataDiv"></div>
    </div>

</div>
<div id="notification-slider-container" class="notification-slider-container">
    <div id="notification-slider-btn" class="notification-slider-btn">
        <i class="icon-envelope bigger-150"></i>
    </div>
    <!-- /.ace-settings-box -->
</div>

    <%
});
%>

