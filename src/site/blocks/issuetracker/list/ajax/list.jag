<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");
var log = new Log();
(function () {
    var mod, obj, result,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json");
    var modPermission = jagg.module("permission");
    if (!jagg.getUser()) {
        print(UNAUTHORIZED_ERROR_RESPONSE);
        return;
    }
 	if (action === "getIssuesSummary") {
    	mod = jagg.module("issuetracker");
        var response = {};
        var appKey=request.getParameter("applicationKey");
        if (modPermission.isUserAccessGrantedForPlatform(PERMISSION_APPLICATION_MEMBER)){
            try {
                print(mod.getIssuesSummary(appKey));
            } catch(e) {
                throw "Error while retrieving issue summary information of application" + e;
            }
        } else {
            response.result = 0;
            response.message = "You don't have permission to get the issue summary";
            print(response);
        }
    }else if (action === "getOpenIssues") {
        mod = jagg.module("issuetracker");
        var appKey=request.getParameter("applicationKey");
        var response = {};
        if (modPermission.isUserAccessGrantedForPlatform(PERMISSION_APPLICATION_MEMBER)){
            var applicationVersion=request.getParameter("applicationVersion");
            try {
                print(mod.getOpenIssues(appKey,applicationVersion));
            } catch(e) {
                throw "Error while retrieving issues of application";
            }
        } else {
            response.result = 0;
            response.message = "You don't have permission to get the open issues";
            print(response);
        }

    }else {
	    throw new Error("No action specified");
    }
}());
%>

