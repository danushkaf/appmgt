<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

    include("/jagg/jagg.jag");
    include("/jagg/constants.jag");
    include("/jagg/config_reader.jag");
    var log = new Log();

    (function()
    {

        var mod, obj, result, stages, output =[],isAllowed = false,
            action = request.getParameter("action");
        if (!jagg.getUser()) {
            print(UNAUTHORIZED_ERROR_RESPONSE);
            return;
        }
        if (action === "fetchPermittedStagesForUser") {
            stages = getProperties("ApplicationDeployment.DeploymentStage");
            mod = jagg.module("permission");
            var applicationKey = request.getParameter("applicationKey");
            if (log.isDebugEnabled()) {
                log.debug("stages: " + stages);
                log.debug("application key: " + applicationKey);
                log.debug("module: " + mod);
            }
            try {

                for (var index in stages){
                    var stage = stages[index];
                    isAllowed = mod.hasPermissionToStage(applicationKey, stage);
                    if (log.isDebugEnabled()) {
                        log.debug("isAllowed " + isAllowed);
                    }
                    if (isAllowed === true) {
                        output.push(stage);
                    }
                }

            } catch (e) {
                log.error("Error while fetching permitted stages \n" + e.message);
                throw "Error while fetching permitted stages";
            }
            print(output);
        } else if(action==="getUserInfoBean"){
    	mod = jagg.module("user");
    	var userName = request.getParameter("userName");
    	result = false ;
    	try {
    		result = mod.getUserInfoBean(userName);
    		print(result);
    	} catch(e) {
    		throw "Error while getting userinfo bean";
    	}

        }else {
            print('Action is not Specified');
        }

    }());

%>
